;;
;;  DO NOT EDIT THIS FILE, it is just a TEMPLATE with documentation included!
;;
;;  This is a site level INI file template which can be used to modify
;;  default BOA system behaviour for this site only.
;;
;;  Copy this file as boa_site_control.ini into sites/foo.com/modules directory,
;;  then uncomment lines for any settings you want to modify, to make it active.
;;  All settings are initially listed with system defaults, for reference.
;;
;;  Note that it takes ~5 seconds to see any modification results in action
;;  due to opcode caching enabled in PHP-FPM for all non-dev sites.
;;
;;  BOA-2.1.3
;;


[cache_control]
;;
;;  You can now easily switch to modern version of Redis integration module
;;  by changing this to TRUE below. Remember to uncomment the line below
;;  if you want to use this advanced version. It is not used by default yet,
;;  because it needs more testing with complex sites to make sure there are
;;  no regressions introduced, so we encourage you to test it on a cloned copy
;;  of your site first and we appreciate your feedback and bug reports, if any.
;;
;;  Besides advanced flush modes configurable per cache bin, this new version
;;  comes with fast lock implementation, fully supporting both D7 and D6 sites,
;;  with multisite-aware capabilities. Note that redis_use_modern set to TRUE
;;  below is required if you want to use also redis_lock_enable and optionally
;;  redis_flush_forced_mode further below.
;;
;;  This option is available only in BOA-2.1.2 or newer.
;;
;redis_use_modern = FALSE

;;
;;  You can enable more aggressive cache flush mode by changing this setting
;;  to TRUE below. Remember to uncomment the line below if you want to use
;;  this feature. Note that this setting currently depends on redis_use_modern
;;  set to TRUE above, and otherwise is ignored.
;;
;;  When enabled, it will automatically set more aggressive cache flush mode
;;  in general and very aggressive for selected cache bins, as listed below.
;;
;;    $conf['redis_flush_mode']             = 1; // Redis default is 0
;;    $conf['redis_flush_mode_cache_page']  = 2; // Redis default is 1
;;    $conf['redis_flush_mode_cache_block'] = 2; // Redis default is 1
;;    $conf['redis_flush_mode_cache_menu']  = 2; // Redis default is 0
;;
;;  Note that even with this option enabled, you can easily override these
;;  values or configure completely custom modes, both for the wildcard option
;;  redis_flush_mode and per cache bin, in the local.settings.php file.
;;
;;  Please refer to the module README for more information on all available
;;  advanced flush modes: http://bit.ly/1drmi35
;;
;;  This option is available only in BOA-2.1.2 or newer, but shouldn't be used,
;;  unless you experience issues with system defaults and you are ready to
;;  test and debug custom flush modes.
;;
;redis_flush_forced_mode = FALSE

;;
;;  You can enable the blazing fast Redis lock implementation by changing this
;;  to TRUE below. Remember to uncomment the line below if you want to use
;;  this feature. Note that this setting currently depends on redis_use_modern
;;  set to TRUE above, and otherwise is ignored.
;;
;;  WARNING! It is a highly experimental feature, which should NOT be enabled
;;           on any live site until this known, critical issue/bug is fixed:
;;           https://drupal.org/node/2135545
;;
;redis_lock_enable = FALSE

;;
;;  Normally you should never disable Redis, unless for debugging rare issues.
;;  If you are sure you need to disable Redis for all sites on this platform,
;;  uncomment the line below and set the value to TRUE.
;;
;redis_cache_disable = FALSE

;;
;;  Speed Booster uses Nginx microcaching mode by default, with just 10 seconds
;;  both for anonymous visitors and logged in users. All known robots/crawlers
;;  and search engines spiders are forced to accept up to 24 hours cache TTL.
;;  Below you can modify the (10 seconds) default for human, anonymous visitors.
;;  Uncomment the line below and set any numeric value you prefer (in seconds)
;;  to override system default (10 seconds). You may want to enable Purge and
;;  Expire modules in this site modules admin area, so any new or modified node,
;;  comment added etc will selectively auto-purge related cache entries to avoid
;;  serving stale content for extended time (depending on the TTL configured).
;;  Note that the value must be higher than 10 or it will be ignored.
;;
;speed_booster_anon_cache_ttl = 10


[access_control]
;;
;;  When set to TRUE allows anonymous users to add content. Best practice and
;;  the default is FALSE which results with redirect to the site's homepage.
;;  Note that this option opens also an access to the node edit.
;;
;allow_anon_node_add = FALSE

;;
;;  When set to TRUE allows anonymous visitors to access the /admin* URL, even
;;  if only to see the 403 Access Denied message. Best practice and the default
;;  is FALSE which results with redirect to the site's homepage. This allows
;;  you to protect the site from DoS attempts, since the /admin* requests are
;;  never cached and always hit Drupal directly. Some sites may experience
;;  issues when your browser has expired session/cookie which redirects you
;;  to the homepage even if you were logged in. If something like this happens,
;;  you may want to disable this protection by changing it to TRUE below.
;;  Remember to uncomment the line below if you want to use this feature.
;;
;disable_admin_dos_protection = FALSE


[config_control]
;;
;;  When set to TRUE allows to use private files mode, so it is useful only
;;  for commerce sites which sell files for download or for intranet sites
;;  where you need to enforce strict access control. All other sites should
;;  never ever use private files mode for obvious performance reasons.
;;
;allow_private_file_downloads = FALSE

;;
;;  When set to TRUE, it forces the cookie_domain to always use main domain,
;;  also when the site is accessed via any domain alias. For example use case
;;  please read: https://gist.github.com/omega8cc/5724528
;;
;server_name_cookie_domain = FALSE

;;
;;  When set to TRUE allows to enable auto-detection and auto-include for
;;  the Drupal for Facebook (fb) module. Supported locations, in the order
;;  of precedence:
;;
;;    sites/all/modules/fb/
;;    sites/all/modules/contrib/fb/
;;    profiles/foo/modules/fb/
;;    profiles/foo/modules/contrib/fb/
;;
;;  IMPORTANT!
;;
;;  While the same setting in the platform level boa_platform_control.ini
;;  file located in the sites/all/modules directory will be automatically
;;  set to TRUE during daily maintenance procedure if the module
;;  will be detected, it will be completely ignored if there is also
;;  boa_site_control.ini file present in the sites/foo.com/modules
;;  directory and this setting is set to FALSE below to improve performance,
;;  in case this module is not used in this site. Remember to uncomment
;;  the line below if you want to use this feature.
;;
;auto_detect_facebook_integration = FALSE

;;
;;  When set to TRUE allows to enable auto-detection and auto-include for
;;  the Domain Access module. Supported locations, in the order of precedence:
;;
;;    sites/all/modules/domain/
;;    sites/all/modules/contrib/domain/
;;    profiles/foo/modules/domain/
;;    profiles/foo/modules/contrib/domain/
;;
;;  IMPORTANT!
;;
;;  While the same setting in the platform level boa_platform_control.ini
;;  file located in the sites/all/modules directory will be automatically
;;  set to TRUE during daily maintenance procedure if the module
;;  will be detected, it will be completely ignored if there is also
;;  boa_site_control.ini file present in the sites/foo.com/modules
;;  directory and this setting is set to FALSE below to improve performance,
;;  in case this module is not used in this site. Remember to uncomment
;;  the line below if you want to use this feature.
;;
;auto_detect_domain_access_integration = FALSE

;;
;;  When set to TRUE allows to enable auto-configuration for the AdvAgg module
;;  on the global.inc level. Supported locations, in the order of precedence:
;;
;;    sites/all/modules/advagg/       (optional override on the platform level)
;;    modules/o_contrib/advagg/       (included in all D6 platforms)
;;    modules/o_contrib_seven/advagg/ (included in all D7 platforms)
;;
;;  IMPORTANT!
;;
;;  This setting will be automatically set to TRUE during daily maintenance
;;  procedure if the module will be detected as enabled in the site, so while
;;  you could enable or disable it temporarily below, this setting will be
;;  overwritten again next morning, depending on the module actual status.
;;  Of course, it will not affect sites with .dev. or .devel. keyword present
;;  in the main site name.
;;
;advagg_auto_configuration = FALSE


[system_control]
;;
;;  This option allows to activate and/or customize DB tables conversion mode
;;  for this site only, and the value defined here will override any other
;;  sql_conversion_mode value set either via _SQL_CONVERT variable in this
;;  Octopus instance in its .USER.octopus.cnf config file or the value of
;;  sql_conversion_mode variable set in the platform level INI file
;;  boa_platform_control.ini located in the sites/all/modules directory.
;;
;;  It can be also set automatically for all sites on all platforms if there is
;;  special _SQL_CONVERT variable defined for this Octopus instance in its
;;  .USER.octopus.cnf config file, but it may require submitting support
;;  request if you are using hosted Aegir BOA service without root access.
;;
;;  Supported values are: innodb and myisam (lowercase only!)
;;
;;  Note that this conversion will run daily even if all tables have been
;;  already converted, so it will run OPTIMIZE on all tables, effectively.
;;
;;  This setting affects only the running daily maintenance system behaviour.
;;
;;  This option is available only in BOA-2.1.3 or newer.
;;
;sql_conversion_mode = NO

;;
;;  Registration settings are now restricted by design to protect your sites
;;  from unintended turning them into spam machines (which is allowed by
;;  Drupal 6 default settings, sadly). Spambots targeting Drupal sites are
;;  already a plague, so unless you have already set more strict permissions
;;  'Administrators only', we force reasonable default policy for new accounts
;;  registration: 'Visitors, but administrator approval is required' plus
;;  'Require e-mail verification when a visitor creates an account' enabled.
;;  If you wish to disable e-mail verification or set 'Who can register
;;  accounts' to 'Visitors', you must set it to TRUE below and uncomment
;;  the line. Now you will be able to permanently change these settings
;;  in this site admin area. Otherwise our default protection will be enabled
;;  again the next day (early morning in the server time zone). Note that
;;  we don't force 'Administrators only', because it could immediately break
;;  many commerce or community sites essential features. But for other sites,
;;  'Administrators only' is strongly suggested.
;;
;;  Note that this is a site specific only and not a platform wide setting.
;;
;;  Note also that this setting affects only the maintenance system behaviour.
;;  It doesn't affect the site behaviour directly in a live mode, so you can
;;  modify related settings in the site admin, and they can be overridden,
;;  depending on the value defined below, when the maintenance system runs
;;  again -- which happens each morning.
;;
;disable_user_register_protection = FALSE
